Create Database P212223

use p212223

--1.View
--2.SP
--3.Trigger
--4.Index
--5.Cursors

--1.View
--It is a virtual table.
--It is orginal copy of table.
--In view we can use only one SELECT ststement.
--If anything is updated in a table that will be automatically updated inside the view.


--Syntax:
--CREATE VIEW vVIEW_NAME
--AS
--SQL Statements


--select * into EMP from SQL181920.dbo.employee
--How will we create view?
select * from emp

alter view vEMPDetails
as
select eid,ename,salary from emp

SP_HELP emp

insert into emp values (7,'Sneha',2900,'F',2345)

select * from vEMPDetails

insert into vEMPDetails values (8,'minal',3200)

delete from vEMPDetails where eid =8


create view vTwoSelect
As
select * from emp
select * from student

drop view vEMPDetails
--30 tables 
--need 40 column from 3o tables need apply join - (query  )
--after every week i need to write that again -- 30 mins 

create view vQuery
As 

--Complex query 


--2.Store Procedure 
--It is block of code to perform certain action whenever it is needed.
--It is working like function.

--Two types of Store Procedure(SP)
--1.Without parameter 
--2.With Parameter 

--Syntax:
--Create PROCEDURE/PROC spSTORED_PROCEDURENAME
--[(@Parameter <Data Type> <SIZE>]
--AS
--BEGIN

--SQL Statements

--END 

--1.Without parameter 
alter proc spTwoSelect
AS 
BEGIN
select * from emp

END 

exec spTwoSelect

spTwoSelect

execute spTwoSelect

drop proc spTwoSelect

--2.With parameter

create proc spAddition(@a int,@b int)
as
begin

declare @addition int

set @addition = @a + @b

print 'Addition of two no = ' + Cast (@addition as Varchar)

END 

--===============================================
--To execute SP with parameter we need to provide the values 

spAddition 100,200

exec spAddition 20 , 30




create proc spCalculator(@a int,@b int)
as
begin

declare @addition int
declare @Substraction int
declare @multiplication int
declare @division float

set @addition = @a + @b
set @Substraction = @a - @b
set @multiplication = @a * @b
set @division = @a / @b

print 'Addition of two no = ' + Cast (@addition as Varchar)
print 'Sustraction of two no = ' + Cast (@Substraction as Varchar)
print 'Multiplication of two no = ' + Cast (@multiplication as Varchar)
print 'Division of two no = ' + Cast (@division as Varchar)

END 


spCalculator 35,7

--3.Trigger 
--Triggers fired automatically , once you perform any DML operation(Insert,Delete,Update) operation on table.
--Triggers are also known as special kind of SP.

--Syntax 
--Create Trigger tr_Trigger_Name
--on TABLE_NAME
--for insert/delete/update
--AS
--begin

--trigger/SQL statements

--END

create table emp1 (eid int,ename varchar(20),sal int,gender varchar(10)) 

insert into emp1 values (1,'A',220,'M')
insert into emp1 values (2,'B',222,'F')
insert into emp1 values (3,'C',233,'M')
insert into emp1 values (4,'D',786,'F')
insert into emp1 values (5,'E',111,'M')
insert into emp1 values (6,'F',222,'F')

select * from emp1

create trigger tr_Test_inserted_Table
on emp1
for insert
as
begin
		select * from inserted

END

--NOte:
--Inserted Table is special kind of table used by trigger and it is availble within the context of trigger.
--Select * from inserted/ Deleted 

--1.It returns the copy of rows inserted/deleted into the table .
--2.Structure of the inserted table is identical or same , whatever the table on which we have created the trigger.



delete from emp1 where eid =6

create trigger tr_Test_deleted_Table
on emp1
for delete 
as
begin
		select * from deleted

END

select * from emp1

delete from emp1 where eid =5


create trigger tr_Test_update_Table
on emp1
for update 
as
begin
		select * from deleted
		select * from inserted 

END

select * from emp1

update emp1 set ename ='Cat' where eid =3

create table Audit_info(EID int identity, recordInfo varchar(300))
select * from Audit_info

create trigger tr_Inserted
on emp1
for insert
as
begin
		Declare @eid int 
		select @eid = eid from inserted

		insert into Audit_info values (CAST(@eid as varchar(5)) + ' '+ 'is inserted at'+ ' '+ CAST(GETDATE () as varchar)) 
END


select * from emp1
select * from Audit_info

insert into emp1 values (5,'E',111,'M')
insert into emp1 values (6,'F',222,'F')


create trigger tr_Deleted
on emp1
for delete
as
begin
		Declare @eid int 
		select @eid = eid from deleted

		insert into Audit_info values (CAST(@eid as varchar(5)) + ' '+ 'is deleted at'+ ' '+ CAST(GETDATE () as varchar)) 
END

select * from emp1

select * from Audit_info

delete from emp1 where eid =5



alter trigger tr_Updated
on emp1
for update
as
begin
		Declare @eid int 
		select @eid = eid from inserted

		insert into Audit_info values (CAST(@eid as varchar(5)) + ' '+ 'is updated at'+ ' '+ CAST(GETDATE () as varchar)) 
END

select * from emp1
select * from Audit_info

update emp1 set ename = 'C' where eid = 3

drop trigger [tr_Inserted]

